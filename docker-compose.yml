name: "acu-infra"
services:
  # stream kafka used for ingesting data from producers
  kafka-in:
    container_name: "kafka-in"
    image: "apache/kafka:3.7.0"
  kafka-out:
    container_name: "kafka-out"
    image: "apache/kafka:3.7.0"

  # distributed storage
  hdfs-namenode:
    container_name: "hdfs-namenode"
    image: "apache/hadoop:3"
    hostname: "hdfs-namenode"
    command: ["hdfs", "namenode"]
    env_file:
      - ./hdfs-config/config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
  hdfs-datanode:
    container_name: "hdfs-datanode"
    image: "apache/hadoop:3"
    hostname: "hdfs-datanode"
    command: ["hdfs", "datanode"]
    env_file:
      - ./hdfs-config/config

  # Cluster spark
  spark-master:
    container_name: "spark-master"
    image: "bitnami/spark:3.5"
    hostname: "spark-master"
    environment:
      SPARK_MODE: "master"
    ports:
      - "8080:8080"
  spark-worker:
    image: "bitnami/spark:3.5"
    environment:
      SPARK_MODE: "worker"
      SPARK_MASTER_URL: "spark://spark-master:7077"
      SPARK_WORKER_MEMORY: "1G"
      SPARK_WORKER_CORES: "1"

  # Analytics database
  analystics-db:
    container_name: "analytics-db"
    hostname: "analytics-db"
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: "analytics"
      POSTGRES_PASSWORD: "kafka"
